<?xml version="1.0"?>
<launch>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find rl_moveit_config)/default_warehouse_mongo_db" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!--
  By default, hide joint_state_publisher's GUI

  MoveIt!'s "demo" mode replaces the real robot driver with the joint_state_publisher.
  The latter one maintains and publishes the current joint configuration of the simulated robot.
  It also provides a GUI to move the simulated robot around "manually".
  This corresponds to moving around the real robot without the use of MoveIt.
  -->
  <arg name="use_gui" default="false" />

  <!-- Gazebo specific options -->
  <arg name="gazebo_gui" default="true"/>
  <arg name="paused" default="true"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gazebo_gui)" />
    <arg name="paused" value="$(arg paused)"/>
  </include>

  <arg name="home_angles" default="-J elbow_joint 1.570796327 -J shoulder_lift_joint -1.570796327 -J shoulder_pan_joint 0.0 -J wrist_1_joint 0.0 -J wrist_2_joint 0.0 -J wrist_3_joint 0.0"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find rl_gazebo)/urdf/rlbot.urdf.xacro'"/>
  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-z 0.01 -urdf -param robot_description -model robot -unpause $(arg home_angles) " respawn="false" output="screen" />

  <!-- If needed, broadcast static tf for robot root -->

  <!-- We do not have a robot connected, so publish fake joint states -->
  <rosparam command="load" file="$(find rl_moveit_config)/config/joint_names.yaml"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="$(arg use_gui)"/>
    <rosparam param="source_list">[/joint_states]</rosparam>
  </node>

  <!-- Load controllers -->
  <rosparam file="$(find rl_gazebo)/controller/manipulator_controller_rl.yaml" command="load"/>
  <rosparam file="$(find rl_gazebo)/controller/joint_state_controller.yaml" command="load"/>
  <node name="manipulator_trajectory_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="manipulator_controller"/>
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="joint_state_controller"/>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find rl_moveit_config)/launch/move_group.launch">
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>  

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find rl_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find rl_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>
  <!-- Save camera image -->
  <node pkg="image_view" type="image_saver" name="rgb_saver" args="image:=/rlbot/camera1/image_raw _filename_format:=$(find rl_demo)/image/rgb%04d.%s"/>
  <!-- Demo -->
  <node pkg="rl_demo" type="simple_movement.py" name="simple_movement" output="screen"/>
</launch>
